#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<string.h>

struct symbol
{
    char symbol[10];
    unsigned int address;
}symtab[100];

int main()
{
int i=0,flag,j,l,k,z,n=0,asc;
unsigned int prog_size=0x0000,length=0x0000,t_sa=0x0000,max_len=0x1e,t_len=0x00,t_si=0x00,temp=0x0000,t=0x0000;
unsigned int loc=0x0000,sa=0x0000,m_opcode=0x00,op=0x0000,obcode=0x000000,x=0x00,loc1,s_loc=0x0000;
char label[20],opcode[20],operand[20], mnemonic[20],word[6],m_code[3],len[3],label1[20],opcode1[20],operand1[20],*arr,arr1[20],str[10],buff[30];
FILE *fp1,*fp2,*fp3,*fp;

fp1 = fopen("program.txt","r");
fp2 = fopen("intermediate.txt","w");
fp3 = fopen("optab.txt","r");

fscanf(fp1,"%s%s%x",label,opcode,&op);
if(strcmp(opcode,"START")==0)
{
    loc=op;
    sa=op;
    fprintf(fp2,"%x\t%s\t%s\t%x\n",loc,label,opcode,op);
}
else
    loc=0x0000;

i=0;
fscanf(fp1,"%s%s",label,opcode);
while(!feof(fp1))
    {
        fscanf(fp1,"%s",operand);
        fprintf(fp2,"%x\t%s\t%s\t%s\n",loc,label,opcode,operand);
        if(strcmp(label,"--")!=0)
            {
             strcpy((symtab[i].symbol),label);
             symtab[i].address=loc;
             //printf("%s\t%x\n",symtab[i].symbol,symtab[i].address);  //for printing "SYMTAB"
             i++;
            }
    fp3 = fopen("optab.txt","r");
    fscanf(fp3,"%s%x",mnemonic,&m_opcode);

    while(!feof(fp3))
        {
            flag=0;
            if(strcmp(opcode,mnemonic)==0)
            {
                loc=loc+3;
                flag = 1;
                break;
            }
            fscanf(fp3,"%s%x",mnemonic,&m_opcode);
        }
        fclose(fp3);

        if(flag==0)
        {
            if(strcmp(opcode,"WORD")==0)
            {
                loc=loc+3;
            }
            else if(strcmp(opcode,"RESW")==0)
            {
                op=atoi(operand);
                loc=loc+op*3;
            }
            else if(strcmp(opcode,"RESB")==0)
            {
                op=atoi(operand);
                loc=loc+op;
            }
            else if(strcmp(opcode,"BYTE")==0)
            {
                if(operand[0]=='X')
                    loc=loc+1;
                else
                {
                    loc= loc+strlen(operand)-3;
                }
            }
        }
    fscanf(fp1,"%s%s",label,opcode);
    }
fclose(fp3);
fclose(fp2);
fclose(fp1);

fp1=fopen("intermediate.txt","r");
fp3=fopen("object_prog.txt","w");
fp = fopen("intermediate.txt","r");

prog_size=loc-sa;
t_sa=sa;
fscanf(fp1,"%x%s%s%x",&loc,label,opcode,&op);
//printf("\n%x\n",prog_size);           //printing program length

if(strcmp(opcode,"START")==0)
{

    fprintf(fp3,"H^%s^%x^%x\n\n",label,sa,prog_size);
    fscanf(fp1,"%x%s%s%s",&loc,label,opcode,operand);
}
fprintf(fp3,"T");
s_loc=loc;
length=0x0f;                                //text record length
arr=(char*)malloc(60*sizeof(char));
while(strcmp(opcode,"END")!=0)
{
        fp2 = fopen("optab.txt","r");
        fscanf(fp2,"%s%s",mnemonic,m_code);
        flag=0;
        while(!feof(fp2))
        {
            if(strcmp(mnemonic,opcode)==0)
            {
                flag=1;
                j=0;
                if((t_len+3)>max_len)
                {
                    fprintf(fp3,"^%x^%x^",s_loc,t_len);
                    t=0x00;
                    while(t!=(t_len*2))
                    {
                        fputc(arr[t],fp3);
                        t++;
                    }
                    fprintf(fp3,"\nT");
                    free(arr);
                    arr=(char*)malloc(60*sizeof(char));
                    t_len=0x00;
                    s_loc=loc;
                }
                t_len=t_len+3;
                while(j<i)
                {
                    if(strcmp(operand,symtab[j].symbol)==0)
                    {
                        strcat(arr,m_code);
                        itoa(symtab[j].address,buff,16);
                        strcat(arr,buff);
                    }
                    j++;
                }
                break;
            }
            fscanf(fp2,"%s%s",mnemonic,m_code);
        }
        fclose(fp2);
        n=0;
        if(flag==0)
        {
            if(strcmp(opcode,"WORD")==0)
            {
                if((t_len+3)>max_len)
                    {
                    fprintf(fp3,"^%x^%x^",s_loc,t_len);
                    t=0x00;
                    while(t!=(t_len*2))
                    {
                        fputc(arr[t],fp3);
                        t++;
                    }
                    fprintf(fp3,"\nT");
                    free(arr);
                    arr=(char*)malloc(60*sizeof(char));
                    t_len=0x00;
                    s_loc=loc;
                    }
                t_len=t_len+3;
                k=0;
                l=strlen(operand);
                for(j=5;j>=0;j--)
                {
                    if(k<l)
                        word[j]=operand[k];

                    else
                        word[j]='0';
                    k++;
                }
                strcat(arr,word);
            }
            else if(strcmp(opcode,"BYTE")==0)
            {

                if(operand[0]=='X')
                    {
                        if(t_len+1>max_len)
                        {
                            fprintf(fp3,"^%x^%x^",s_loc,t_len);
                            t=0x00;
                            while(t!=(t_len*2))
                            {
                                fputc(arr[t],fp3);
                                t++;
                            }
                            fprintf(fp3,"\nT");
                            free(arr);
                            arr=(char*)malloc(60*sizeof(char));
                            t_len=0x00;
                            s_loc=loc;
                        }
                        t_len=t_len+1;
                        strcat(arr,operand);
                    }
                else if(operand[0]=='C')
                {
                    l=strlen(operand);
                    l--;
                    if(t_len+(l-2)>max_len)
                    {
                        fprintf(fp3,"^%x^%x^",s_loc,t_len);
                        t=0x00;
                        while(t!=(t_len*2))
                        {
                            fputc(arr[t],fp3);
                            printf("\n \t%c",arr[t]);
                            t++;
                        }
                        fprintf(fp3,"\nT");
                        free(arr);
                        arr=(char*)malloc(60*sizeof(char));
                        t_len=0x00;
                        s_loc=loc;
                    }
                    for(j=2;j<l;j++)
                    {
                        asc=(int)(operand[j]);
                        itoa(asc,arr1,10);
                        t_len=t_len+1;
                        strcat(arr,arr1);
                    }
                }
            }
            else if(strcmp(opcode,"RESW")==0)
            {
                        if(t_len!=0)
                        {
                            fprintf(fp3,"^%x^%x^",s_loc,t_len);
                            t=0x00;
                            while(t!=(t_len*2))
                            {
                                fputc(arr[t],fp3);
                                t++;
                            }
                        free(arr);
                        arr=(char*)malloc(60*sizeof(char));
                        t_len=0x00;
                        }
                        n=1;
            }
            else if(strcmp(opcode,"RESB")==0)
            {
                        if(t_len!=0)
                        {
                            fprintf(fp3,"^%x^%x^",s_loc,t_len);
                            t=0x00;
                            while(t!=(t_len*2))
                            {
                                fputc(arr[t],fp3);
                                t++;
                            }
                        free(arr);
                        arr=(char*)malloc(60*sizeof(char));
                        t_len=0x00;
                        }
                        n=1;
            }
        }
                fscanf(fp1,"%x%s%s%s",&loc,label,opcode,operand);
                if(n==1&&(strcmp(opcode,"RESW")!=0)&&(strcmp(opcode,"RESB")!=0)&&(strcmp(opcode,"END")!=0))
                    {
                        fprintf(fp3,"\nT");
                        s_loc=loc;
                    }
}

if(strcmp(opcode,"END")==0)
{
    fprintf(fp3,"\n\nE^00%x\n",sa);
}
return 0;
}
